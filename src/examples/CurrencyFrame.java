/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package examples;

import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author hossa
 */
public class CurrencyFrame extends javax.swing.JFrame {
    
    static final Map<String, Double> exchangeRates = new HashMap<>();
    
    //block code that execute once when the class is loaded
    static {
        exchangeRates.put("USD", 1.0);    // Base currency
        exchangeRates.put("EUR", 0.85);
        exchangeRates.put("GBP", 0.75);
        exchangeRates.put("JPY", 110.5);
        exchangeRates.put("CHF", 0.92);
        exchangeRates.put("CAD", 1.25);
        exchangeRates.put("AUD", 1.35);
        exchangeRates.put("CNY", 6.45);
        exchangeRates.put("SGD", 1.36);
        exchangeRates.put("NZD", 1.40);
        exchangeRates.put("EGP", 15.70);
    }

    /**
     * Creates new form CurrencyFrame
     */
    public CurrencyFrame() {
        initComponents();
    }
    
    public static double convert(String from, String to, double amount) {
        if (!exchangeRates.containsKey(from) && !exchangeRates.containsKey(to)) {
            throw new IllegalArgumentException("Unsupported Currency.");
        }
        double fromRate = exchangeRates.get(from);
        double toRate = exchangeRates.get(to);
        return (amount / fromRate) * toRate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fromCurrencyCb = new javax.swing.JComboBox<>();
        toCurrencyCb = new javax.swing.JComboBox<>();
        inputCurrencyText = new javax.swing.JTextField();
        outputCurrencyText = new javax.swing.JTextField();
        convertBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromSymbolTxt = new javax.swing.JTextField();
        toSymbolTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fromCurrencyCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "United State Dollar USD", "Euro EUR", "British Pound GBP", "Japanese yen JPY", "Swiss Franc CHF", "Canadian Dollar CAD", "Australian Dollar AUD", "Chinese Yuan CNY", "Singapore Dollar SGD", "New Zealand Dollar NZD", "Egypt EGP" }));
        fromCurrencyCb.setSelectedIndex(-1);
        fromCurrencyCb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromCurrencyCbItemStateChanged(evt);
            }
        });

        toCurrencyCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "United State Dollar USD", "Euro EUR", "British Pound GBP", "Japanese yen JPY", "Swiss Franc CHF", "Canadian Dollar CAD", "Australian Dollar AUD", "Chinese Yuan CNY", "Singapore Dollar SGD", "New Zealand Dollar NZD", "Egypt EGP" }));
        toCurrencyCb.setSelectedIndex(-1);
        toCurrencyCb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toCurrencyCbItemStateChanged(evt);
            }
        });

        inputCurrencyText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        inputCurrencyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        outputCurrencyText.setEditable(false);
        outputCurrencyText.setBackground(new java.awt.Color(255, 255, 255));
        outputCurrencyText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        outputCurrencyText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        outputCurrencyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputCurrencyTextActionPerformed(evt);
            }
        });

        convertBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        convertBtn.setText("Convert");
        convertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("From Currency");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("To Currency");

        fromSymbolTxt.setEditable(false);
        fromSymbolTxt.setBackground(new java.awt.Color(255, 255, 255));
        fromSymbolTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        fromSymbolTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        toSymbolTxt.setEditable(false);
        toSymbolTxt.setBackground(new java.awt.Color(255, 255, 255));
        toSymbolTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        toSymbolTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(resetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(convertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(109, 109, 109))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputCurrencyText, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCurrencyText, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromSymbolTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toSymbolTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromCurrencyCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toCurrencyCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromCurrencyCb, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toCurrencyCb, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fromSymbolTxt)
                    .addComponent(inputCurrencyText, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toSymbolTxt)
                    .addComponent(outputCurrencyText, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(convertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        inputCurrencyText.setText("");
        outputCurrencyText.setText("");
        fromCurrencyCb.setSelectedIndex(-1);
        toCurrencyCb.setSelectedIndex(-1);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void outputCurrencyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputCurrencyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputCurrencyTextActionPerformed

    private void convertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertBtnActionPerformed
        // TODO add your handling code here:
        if (fromCurrencyCb.getSelectedIndex() >= 0 && toCurrencyCb.getSelectedIndex() >= 0) {
            String fromCurrency = fromCurrencyCb.getSelectedItem() + "";
            String toCurrency = toCurrencyCb.getSelectedItem() + "";
            String fromCurrencySymbol = fromCurrency.substring(fromCurrency.lastIndexOf(" ") + 1, fromCurrency.length());
            String toCurrencySymbol = toCurrency.substring(toCurrency.lastIndexOf(" ") + 1, toCurrency.length());
            
            double inputAmount = Double.parseDouble(inputCurrencyText.getText());
            double outputAmount = convert(fromCurrencySymbol, toCurrencySymbol, inputAmount);
            String formatOutput = new DecimalFormat("0.00").format(outputAmount);
            outputCurrencyText.setText(formatOutput);
        }
    }//GEN-LAST:event_convertBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void fromCurrencyCbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromCurrencyCbItemStateChanged
        // TODO add your handling code here:
        if (fromCurrencyCb.getSelectedIndex() >= 0) {
            String fromCurrency = fromCurrencyCb.getSelectedItem() + "";
            String fromCurrencySymbol = fromCurrency.substring(fromCurrency.lastIndexOf(" ") + 1, fromCurrency.length());
            fromSymbolTxt.setText(fromCurrencySymbol);
        }

    }//GEN-LAST:event_fromCurrencyCbItemStateChanged

    private void toCurrencyCbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toCurrencyCbItemStateChanged
        // TODO add your handling code here:
        if (toCurrencyCb.getSelectedIndex() >= 0) {
            String toCurrency = toCurrencyCb.getSelectedItem() + "";
            String toCurrencySymbol = toCurrency.substring(toCurrency.lastIndexOf(" ") + 1, toCurrency.length());
            toSymbolTxt.setText(toCurrencySymbol);
        }
    }//GEN-LAST:event_toCurrencyCbItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrencyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convertBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JComboBox<String> fromCurrencyCb;
    private javax.swing.JTextField fromSymbolTxt;
    private javax.swing.JTextField inputCurrencyText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField outputCurrencyText;
    private javax.swing.JButton resetBtn;
    private javax.swing.JComboBox<String> toCurrencyCb;
    private javax.swing.JTextField toSymbolTxt;
    // End of variables declaration//GEN-END:variables
}
